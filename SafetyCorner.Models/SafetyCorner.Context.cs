//------------------------------------------------------------------------------
// <auto-generated>
//     這個程式碼是由範本產生。
//
//     變更這個檔案可能會導致不正確的行為，而且如果已重新產生
//     程式碼，這個檔案將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Common;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects.DataClasses;
using System.Data.Objects;
using System.Data;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace SafetyCorner.Models
{
    public partial class SafetyCornerEntities : ObjectContext
    {
        public const string ConnectionString = "name=SafetyCornerEntities";
        public const string ContainerName = "SafetyCornerEntities";
    
        #region Constructors
    
        public SafetyCornerEntities()
            : base(ConnectionString, ContainerName)
        {
            Initialize();
        }
    
        public SafetyCornerEntities(string connectionString)
            : base(connectionString, ContainerName)
        {
            Initialize();
        }
    
        public SafetyCornerEntities(EntityConnection connection)
            : base(connection, ContainerName)
        {
            Initialize();
        }
    
        private void Initialize()
        {
            // 建立 Proxy 時需要用到 ProxyDataContractResolver 和
            // 可允許消極式載入，這種載入可以在序列化期間擴充載入的圖形。
            ContextOptions.ProxyCreationEnabled = false;
            ObjectMaterialized += new ObjectMaterializedEventHandler(HandleObjectMaterialized);
        }
    
        private void HandleObjectMaterialized(object sender, ObjectMaterializedEventArgs e)
        {
            var entity = e.Entity as IObjectWithChangeTracker;
            if (entity != null)
            {
                bool changeTrackingEnabled = entity.ChangeTracker.ChangeTrackingEnabled;
                try
                {
                    entity.MarkAsUnchanged();
                }
                finally
                {
                    entity.ChangeTracker.ChangeTrackingEnabled = changeTrackingEnabled;
                }
                this.StoreReferenceKeyValues(entity);
            }
        }
    
        #endregion
    
        #region ObjectSet 屬性
    
        public ObjectSet<MenuList> MenuLists
        {
            get { return _menuLists  ?? (_menuLists = CreateObjectSet<MenuList>("MenuLists")); }
        }
        private ObjectSet<MenuList> _menuLists;
    
        public ObjectSet<Quicklink> Quicklinks
        {
            get { return _quicklinks  ?? (_quicklinks = CreateObjectSet<Quicklink>("Quicklinks")); }
        }
        private ObjectSet<Quicklink> _quicklinks;

        #endregion
    }
}
